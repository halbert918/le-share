<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.le.share.mapper.ext.ExtArticleMapper">
  <resultMap id="ExtBaseResultMap" extends="com.le.share.mapper.ArticleMapper.ResultMapWithBLOBs" type="com.le.share.model.Article">
  </resultMap>

  <resultMap id="DetailResultMap" extends="com.le.share.mapper.ArticleMapper.ResultMapWithBLOBs" type="com.le.share.model.ArticleDetail">
    <result column="nick_name" jdbcType="VARCHAR" property="authorNickName" />
    <result column="avatar_url" jdbcType="VARCHAR" property="authorAvatarUrl" />
  </resultMap>

  <sql id="Base_Column_List">
    id, title, author_user_id, comment_count, like_count, view_count, type, status, create_time,
    updator, update_time, content
  </sql>

  <select id="selectList" resultMap="DetailResultMap">
    select
      a.id, a.title, a.author_user_id, a.comment_count, a.like_count, a.view_count, a.type, SUBSTR(a.content, 1, 150) content,
      a.is_hot, a.status, a.create_time, u.nick_name, u.avatar_url
    from t_article a left join t_user u on a.author_user_id = u.id
    where 1 =1
    <if test=" status != null and status >= 0 ">
      and a.status = #{status}
    </if>
    <if test=" type != null and type >= 0 ">
      and a.type = #{type}
    </if>
    <if test=" keyword != null and keyword != '' ">
      and MATCH(`title`,`content`) AGAINST(#{keyword})
    </if>
    <if test=" prevId != null and prevId > 0 ">
      and a.id &lt; #{prevId}
    </if>
    order by a.id desc
    limit #{limit}
  </select>

  <select id="selectListDynamic" resultMap="DetailResultMap">
    select
    id, title, author_user_id, comment_count, like_count, view_count, type, status, create_time,
    updator, update_time, SUBSTR(a.content, 1, 100) content
    from t_article a
    where 1 = 1
    <if test=" article.status != null and article.status >= 0 ">
      and a.status = #{article.status}
    </if>
    <if test=" article.type != null and article.type >= 0 ">
      and a.type = #{article.type}
    </if>
    <if test=" article.authorUserId != null and article.authorUserId > 0 ">
      and a.author_user_id = #{article.authorUserId}
    </if>
    <if test=" article.isHot != null ">
      and a.is_hot = #{article.isHot}
    </if>
    <if test=" article.isSwiper != null ">
      and a.is_swiper = #{article.isSwiper}
    </if>
    order by a.id desc
    limit #{offset}, #{limit}
  </select>

  <select id="selectListByArtIds" resultMap="DetailResultMap">
    select
    a.id, a.title, a.author_user_id, a.comment_count, a.like_count, a.view_count, a.type,
    a.create_time, u.nick_name, u.avatar_url, SUBSTR(a.content, 1, 100) content
    from t_article a left join t_user u on a.author_user_id = u.id
    where a.`status` = 0
    AND a.id IN
    <foreach collection="artIds" item="item" index="index" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </select>


  <select id="selectById" parameterType="java.lang.Long" resultMap="DetailResultMap">
    select
    a.id, a.title, a.author_user_id, a.comment_count, a.like_count, a.view_count, a.type,
    a.content, a.status, a.create_time, u.nick_name, u.avatar_url
    from t_article a left join t_user u on a.author_user_id = u.id
    where a.id = #{id,jdbcType=BIGINT}
  </select>

  <update id="incrLikeCount">
    update t_article
    set
    like_count = like_count + #{incr}
    where id = #{id, jdbcType=BIGINT}
  </update>

  <update id="incrCommentCount">
    update t_article
    set
    comment_count = comment_count + 1
    where id = #{id, jdbcType=BIGINT}
  </update>

  <update id="incrViewCount">
    update t_article
    set
    view_count = view_count + 1
    where id = #{id, jdbcType=BIGINT}
  </update>
</mapper>
